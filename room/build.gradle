buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE'
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}
repositories.addAll(getBuildscript().getRepositories())



apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'docker'

project.version = '0.1'
project.group = 'de.maibornwolff.microservices'

sourceCompatibility = 1.8
targetCompatibility = 1.8

idea.module {
    downloadJavadoc = true
    downloadSources = true
}

jar {
    baseName = 'room'
    version =  null
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile 'org.springframework.boot:spring-boot-starter-jetty'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile 'org.springframework.boot:spring-boot-starter-amqp'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
    compile 'io.springfox:springfox-swagger2:2.2.2'
    compile 'io.springfox:springfox-swagger-ui:2.2.2'

    runtime 'net.logstash.logback:logstash-logback-encoder:4.5.1'

    testCompile 'junit:junit'
    testCompile 'org.mockito:mockito-all:1.10.19'

}

task buildDocker(type: Docker, dependsOn: jar) {
    group = 'docker'
    applicationName = jar.baseName
    setTagVersionToLatest()
    dockerfile = file('src/main/docker/Dockerfile')
    setEnvironment('VERSION', project.version)
    doFirst {
        copy {
            from jar
            into stageDir
        }
        copy {
            from file('src/main/docker/entrypoint.sh')
            into stageDir
        }
    }
}

buildDocker.dependsOn test
build.dependsOn buildDocker

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}